library(swirl)
swirl()
getwd()
ls()
x<-9
ls9
ls()
dir()
?list.files
args(list.files)
old.dir<-getwd()
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
list.files()
file.exisits("mytest.R")
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R")
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
?file.path()
file.path("mytest3.R",folder1,folder2)
file.path("mytest3.R","folder1","folder2")
file.path("folder1","folder2","mytest3.R")
info()
file.path(getwd(),"mytest3.R")
file.path("folder1","folder2")
?dir.create
dir.create(file.path(getwd(),"testdir2")
)
ls()
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
?unlink()
unlink("testdir2",recursive=TRUE)
setwd(old.dir)
unlink("testdir",recursive=TRUE)
q
z<-5
while(z>=3 && z<=10){#
	print(z)#
	coin<-rbinom(1,1,0.5)#
	if(coin==1){ ## random walk#
		z<-z+1#
		} else {z<-z-1#
			}#
}
z
z<-6
while(z>=3 && z<=10){#
	print(z)#
	coin<-rbinom(1,1,0.5)#
	if(coin==1){ ## random walk#
		z<-z+1#
		} else {z<-z-1#
			}#
}
xor(!isTRUE(TRUE),6>-1)
xor(4>=9,8!=8.0)
hsb2.small <- read.csv("http://www.ats.ucla.edu/stat/data/hsb2_small.csv")
names(hsb2.small)
dim(hsbe.small)
dim(hsb2.small)
summary(hsb2.small)
hsb2.small
hsb2.small["read">=50]
hsb2.small[,"read">=50]
hsb2.small[,5]
hsb2.small[,5>1]
hsb2.small[,5:2]
hsb3<-hsb2.small[,c(1,7,8)])
hsb3<-hsb2.small[,c(1,7,8)]
hsb3
hsb4<-hsb2.small[,1:4]
hsb4
hsb6<-hsb2.small[hsb2.small$ses==1,]
hsb6
hsb6<-hsb2.small[$ses==1,]
hsb6<-hsb2.small["ses"==1,]
hsb6
hsb6<-hsb2.small[ses==1,]
hsb6<-hsb2.small[hsb2.small$ses==1,]
hsb6
hsb6<-hsb2.small[hsb2.small$ses %in% c(11,12,20,48,86,195),]
hsb6
hsb6<-hsb2.small[hsb2.small$id %in% c(11,12,20,48,86,195),]
hsb6
hsb8<-hsb2.small[with(hsb2.small,ses==3&female==0),]
hsb8
write.50<-subset(hsb2.small,write>50)
write.50
?cor
cor(write.50$read,write.50$write)
?subset
write.50<-subset(hsb2.small,write>50,select=read)
write.50
hsb2.small[!complete.cases(hsb2.small),]
hsb2.small[complete.cases(hsb2.small),]
append(1:5, 0:1, after = 3)
append(1:5, 0:1)
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<- lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls)vect<-sapply(flags,class)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors <-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[,19:23]
lappy(flag_shapes,range)
lapply(flag_shapes,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals <-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals,function(elem) elem[2])
library(datasets)
s<-split(airquality, airquality$Month)
head(s)
lapply(s,mean)
lapply(s,function(x) colMeans(x[,c("Ozone","Solar.R","Wind")]))
sapply(s,function(x) colMeans(x[,c("Ozone","Solar.R","Wind")]))
sapply(s,function(x) colMeans(x[,c("Ozone","Solar.R","Wind")],na.rm=TRUE))
x<-rnorm(10)
f1<-gl(2,5)
f2<-(gl(5,2))
f1
f2
interaction(f1,f2)
str(split(s,list(f1,f2)))
x
str(split(x,list(f1,f2)))
rm(x)
mean(x)
traceback()
mean(x)
traceback()
lm(y~x)
traceback()
debug(lm)
lm(y~x)
n
options(error=recover)
read.csv("nofile")
n
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
?sapply
getwd()
load("cacheMatrix.R")
source("/Users/mbellettiere/ProgrammingAssignment2/cachematrix.R")
